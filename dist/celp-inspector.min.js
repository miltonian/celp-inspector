(function() {
    // Helper to get React fiber node from DOM element
    function getFiberNodeFromDOM(element) {
      const key = Object.keys(element).find(
        key => key.startsWith('__reactFiber$') || 
               key.startsWith('__reactInternalInstance$')
      );
      return key ? element[key] : null;
    }
  
    // Helper to get component name
    function getComponentName(fiber) {
      if (!fiber) return 'Unknown';
      const { type } = fiber;
      return type?.displayName || type?.name || (typeof type === 'string' ? type : 'Anonymous');
    }
  
    // Create highlighter element
    const highlighter = document.createElement('div');
    highlighter.style.position = 'fixed';
    highlighter.style.border = '2px solid #00a8ff';
    highlighter.style.backgroundColor = 'rgba(0, 168, 255, 0.1)';
    highlighter.style.pointerEvents = 'none';
    highlighter.style.zIndex = '99999';
    highlighter.style.display = 'none';
    document.body.appendChild(highlighter);
  
    // Create tooltip for component info
    const tooltip = document.createElement('div');
    tooltip.style.position = 'fixed';
    tooltip.style.backgroundColor = '#333';
    tooltip.style.color = 'white';
    tooltip.style.padding = '4px 8px';
    tooltip.style.borderRadius = '4px';
    tooltip.style.fontSize = '12px';
    tooltip.style.zIndex = '100000';
    tooltip.style.display = 'none';
    document.body.appendChild(tooltip);
  
    // Track inspection state
    let isInspecting = false;
    
    // Toggle inspection mode
    window.toggleReactInspector = function() {
      isInspecting = !isInspecting;
      console.log(`React inspection ${isInspecting ? 'enabled' : 'disabled'}`);
      highlighter.style.display = 'none';
      tooltip.style.display = 'none';
    };
  
    // Handle mousemove for inspection
    document.addEventListener('mousemove', function(e) {
      if (!isInspecting) return;
      
      const element = document.elementFromPoint(e.clientX, e.clientY);
      if (!element) return;
      
      const fiber = getFiberNodeFromDOM(element);
      if (!fiber) return;
      
      // Update highlighter
      const rect = element.getBoundingClientRect();
      highlighter.style.left = rect.left + 'px';
      highlighter.style.top = rect.top + 'px';
      highlighter.style.width = rect.width + 'px';
      highlighter.style.height = rect.height + 'px';
      highlighter.style.display = 'block';
      
      // Update tooltip
      const componentName = getComponentName(fiber);
      tooltip.textContent = componentName;
      tooltip.style.left = (e.clientX + 10) + 'px';
      tooltip.style.top = (e.clientY + 10) + 'px';
      tooltip.style.display = 'block';
    });
  
    // Add keyboard shortcut (Option+Shift+I on Mac)
    document.addEventListener('keydown', function(e) {
      if (e.altKey && e.shiftKey && e.key === 'I') {
        window.toggleReactInspector();
      }
    });
  
    console.log('Simple React component inspector loaded. Press Option+Shift+I to toggle or call window.toggleReactInspector()');
  })();